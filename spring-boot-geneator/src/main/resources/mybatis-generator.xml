<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <context id="oracle" targetRuntime="MyBatis3Simple" defaultModelType="flat">
        <plugin type="tk.mybatis.mapper.generator.MapperPlugin">
            <!-- 该配置会使生产的Mapper自动继承MyMapper -->
            <property name="mappers" value="com.example.springbootgeneator.config.MyMapper" />
            <!-- caseSensitive默认false，当数据库表名区分大小写时，可以将该属性设置为true -->
            <property name="caseSensitive" value="false"/>
        </plugin>
        <!-- 阻止生成自动注释 -->
      <!--  <commentGenerator>
            <property name="javaFileEncoding" value="UTF-8"/>
            <property name="suppressDate" value="true"/>
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>-->
        <!-- 数据库链接地址账号密码 -->
        <jdbcConnection
                driverClass="com.mysql.cj.jdbc.Driver"
                connectionURL="jdbc:mysql://localhost:3306/kitty?serverTimezone=UTC&amp;useUnicode=true&amp;characterEndcoding=utf8"
                userId="root"
                password="123456">
        </jdbcConnection>

        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>
     <!--   <javaTypeResolver type="com.tom.mybatis.plugin.JavaTypeResolverDecimalToDoubleImpl"/>-->
        <!-- 生成Model类存放位置 -->
        <javaModelGenerator targetPackage="com.example.springbootgeneator.bean" targetProject="src/main/java">
           <!-- <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>-->
        </javaModelGenerator>

        <!-- 生成映射文件存放位置 -->
        <sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources">
            <!--<property name="enableSubPackages" value="true"/>-->
        </sqlMapGenerator>

        <!-- 生成Dao类存放位置 -->
        <!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件的代码
            type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象
            type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.example.springbootgeneator.mapper" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!-- 配置需要生成的表 -->
        <table tableName="sys_dept" domainObjectName="Dept" mapperName="DeptMapper"/>
        <table tableName="sys_dict" domainObjectName="Dict" mapperName="DictMapper"/>
        <table tableName="sys_log" domainObjectName="Log" mapperName="LogMapper"/>
        <table tableName="sys_menu" domainObjectName="Menu" mapperName="MenuMapper"/>
        <table tableName="sys_role" domainObjectName="Role" mapperName="RoleMapper"/>
        <table tableName="sys_role_dept" domainObjectName="RoleDept" mapperName="RoleDeptMapper"/>
        <table tableName="sys_role_menu" domainObjectName="RoleMenu" mapperName="RoleMenuMapper"/>
        <table tableName="sys_user" domainObjectName="User" mapperName="UserMapper"/>
        <table tableName="sys_user_role" domainObjectName="UserRole" mapperName="UserRoleMapper"/>
        <table tableName="sys_user_token" domainObjectName="UserToken" mapperName="UserTokenMapper"/>
    </context>
</generatorConfiguration>